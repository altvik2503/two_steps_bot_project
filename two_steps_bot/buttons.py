from typing import Optional
from telegram import (
    CallbackQuery,
    Update,
    ParseMode,
)
from telegram.ext import (
    CallbackContext,
)

from telegram_markup import ILButton, ILMarkup
from decorators import log_errors

ILB_CHECK_IN_TIME = ILButton(
    'check_in_time',
    '–í—Ä–µ–º—è –∑–∞–µ–∑–¥–∞/ –≤—ã–µ–∑–¥–∞.',
    ILMarkup.markup_cell,
)
ILB_EARLY_LATE_CHECK = ILButton(
    'early_check',
    '–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–Ω–Ω–µ–≥–æ –∑–∞–µ–∑–¥–∞/–ø–æ–∑–¥–Ω–µ–≥–æ –≤—ã–µ–∑–¥–∞.',
    ILMarkup.markup_cell,
)
ILB_IN_YARD_PARKING = ILButton(
    'in_yard_parking',
    '–ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–∏–ø–∞—Ä–∫–æ–≤–∞—Ç—å –º–∞—à–∏–Ω—É –≤–æ –¥–≤–æ—Ä–µ?',
    ILMarkup.markup_cell,
)
ILB_NEAREST_PARKING = ILButton(
    'nearest_parking',
    '–ï—Å—Ç—å –ª–∏ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏ –ø–∞—Ä–∫–æ–≤–∫–∏?',
    ILMarkup.markup_cell,
)
ILB_SETTLEMENT = ILButton(
    'settlement',
    '–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞—Å–µ–ª–µ–Ω–∏—è?',
    ILMarkup.markup_cell,
)
ILB_PAYMENT_BY_CARD = ILButton(
    'payment_by_card',
    '–í–æ–∑–º–æ–∂–Ω–∞ –ª–∏ –æ–ø–ª–∞—Ç–∞ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ–π?',
    ILMarkup.markup_cell,
)
ILB_PREPAYMENT = ILButton(
    'prepayment',
    '–ë—Ä–æ–Ω—å –Ω–∞–ø—Ä—è–º—É—é. –ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞.',
    ILMarkup.markup_cell,
)
ILB_PAYMENT_MADE = ILButton(
    'payment_made',
    '–ö–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—Ç–∞?',
    ILMarkup.markup_cell,
)
ILB_BOOKING_CANCEL = ILButton(
    'booking_cancel',
    '–ï—Å–ª–∏ —è –∑–∞—Ö–æ—á—É –æ—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...',
    ILMarkup.markup_cell,
)
ILB_SHOPS = ILButton(
    'shops',
    '–ï—Å—Ç—å –ª–∏ —Ä—è–¥–æ–º –º–∞–≥–∞–∑–∏–Ω—ã?',
    ILMarkup.markup_cell,
)
ILB_TOWEL = ILButton(
    'towel',
    '–ë–µ–ª—å–µ –∏ –ø–æ–ª–æ—Ç–µ–Ω—Ü–∞.',
    ILMarkup.markup_cell,
)
ILB_GET_TO = ILButton(
    'get_to',
    '–ö–∞–∫ –¥–æ–µ—Ö–∞—Ç—å?',
    ILMarkup.markup_cell,
)
ILB_EAT = ILButton(
    'eat',
    '–ì–¥–µ –ø–µ—Ä–µ–∫—É—Å–∏—Ç—å –±—ã—Å—Ç—Ä–æ/–Ω–µ –¥–æ—Ä–æ–≥–æ?',
)
ILB_WHAT_PROVIDE = ILButton(
    'what_provide',
    '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –ª–∏ —Ç–∞–ø–æ—á–∫–∏, —à–∞–ø–æ—á–∫–∏ –¥–ª—è –¥—É—à–∞, '
    '–∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞?',
)

CHILDREN_CHECK_IN = (
    ILB_GET_TO,
    ILB_CHECK_IN_TIME,
    ILB_EARLY_LATE_CHECK,
    ILB_SETTLEMENT,
)
CHILDREN_PAYMENT = (
    ILB_PAYMENT_MADE,
    ILB_PAYMENT_BY_CARD,
    ILB_PREPAYMENT,
    ILB_BOOKING_CANCEL,
    )
CHILDREN_OTHER = (
    ILB_NEAREST_PARKING,
    ILB_IN_YARD_PARKING,
    ILB_TOWEL,
    ILB_WHAT_PROVIDE,
    ILB_SHOPS,
    ILB_EAT,
    )

ILB_GET_TO.children.add(*CHILDREN_CHECK_IN)
ILB_CHECK_IN_TIME.children.add(*CHILDREN_CHECK_IN)
ILB_EARLY_LATE_CHECK.children.add(*CHILDREN_CHECK_IN)
ILB_SETTLEMENT.children.add(*CHILDREN_CHECK_IN)

ILB_PAYMENT_MADE.children.add(*CHILDREN_PAYMENT)
ILB_PAYMENT_BY_CARD.children.add(*CHILDREN_PAYMENT)
ILB_PREPAYMENT.children.add(*CHILDREN_PAYMENT)
ILB_BOOKING_CANCEL.children.add(*CHILDREN_PAYMENT)

ILB_NEAREST_PARKING.children.add(*CHILDREN_OTHER)
ILB_IN_YARD_PARKING.children.add(*CHILDREN_OTHER)
ILB_TOWEL.children.add(*CHILDREN_OTHER)
ILB_WHAT_PROVIDE.children.add(*CHILDREN_OTHER)
ILB_SHOPS.children.add(*CHILDREN_OTHER)
ILB_EAT.children.add(*CHILDREN_OTHER)

ILB_CHECK_IN = ILButton(
    'check_in',
    '–ó–∞–µ–∑–¥...',
    ILMarkup.markup_cell,
    *CHILDREN_CHECK_IN,
)
ILB_PAYMENT = ILButton(
    'payment',
    '–û–ø–ª–∞—Ç–∞...',
    ILMarkup.markup_cell,
    *CHILDREN_PAYMENT
)
ILB_OTHER = ILButton(
    'other',
    '–î—Ä—É–≥–æ–µ...',
    ILMarkup.markup_cell,
    *CHILDREN_OTHER
)

CHILDREN_CATEGORY = (
    ILB_CHECK_IN,
    ILB_PAYMENT,
    ILB_OTHER,
)

ILB_PESTELYA = ILButton(
    'pestelya',
    '–ü–µ—Å—Ç–µ–ª—è',
    ILMarkup.markup_line,
).add_captions(
    (
        ILB_GET_TO.callback,
        '*–ê—ç—Ä–æ–ø–æ—Ä—Ç –ü—É–ª–∫–æ–≤–æ:*\n'
        '–∞–≤—Ç–æ–±—É—Å 39 - —Å—Ç.–º. –ú–æ—Å–∫–æ–≤—Å–∫–∞—è - —Å—Ç.–º. –ì–æ—Å—Ç–∏–Ω—ã–π –¥–≤–æ—Ä '
        '- –ø–µ—à–∫–æ–º –¥–æ —É–ª. –ü–µ—Å—Ç–µ–ª—è 5,\n'
        '–∏–ª–∏ "–Ø–Ω–¥–µ–∫—Å —Ç–∞–∫—Å–∏" 650-850 —Ä—É–±.\n'
        '*–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –≤–æ–∫–∑–∞–ª:*\n'
        '–æ–±—â. —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –ø–æ –ù–µ–≤—Å–∫–æ–º—É –ø—Ä., –¥–æ —Å—Ç. –ì–æ—Å—Ç–∏–Ω—ã–π –¥–≤–æ—Ä. '
        '–î–∞–ª–µ–µ –ø–µ—à–∫–æ–º 15 –º–∏–Ω—É—Ç,\n'
        '–∏–ª–∏ "–Ø–Ω–¥–µ–∫—Å —Ç–∞–∫—Å–∏" 180-280 —Ä—É–±.',
    ),
    (
        ILB_NEAREST_PARKING.callback,
        '–û—Ç–∫—Ä—ã—Ç—ã–π –¥–≤–æ—Ä - —É–ª. –ß–∞–π–∫–æ–≤—Å–∫–æ–≥–æ, 2.',
    ),
    (

        ILB_IN_YARD_PARKING.callback,
        '–ù–µ—Ç, –∑–∞–µ–∑–¥–∞ –≤–æ –¥–≤–æ—Ä, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ—Ç.',
    ),
    (
        ILB_SHOPS.callback,
        '"–î–∏–∫—Å–∏", —É–ª. –ü–µ—Å—Ç–µ–ª—è, 12.\n'
        '"–§–µ—Ä–º–µ—Ä", —É–ª. –ü–µ—Å—Ç–µ–ª—è, 13.\n'
        '"–ê–∑–±—É–∫–∞ –≤–∫—É—Å–∞", –õ–∏—Ç–µ–π–Ω—ã–π –ø—Ä., 26.',
    ),
    (
        ILB_EAT.callback,
        '–°—Ç–æ–ª–æ–≤–∞—è "–¢–∞—Ä–µ–ª–∫–∞", —É–ª. –ü–µ—Å—Ç–µ–ª—è, 8.',
    ),
)
ILB_NEVSKY = ILButton(
    'nevsky',
    '–ù–µ–≤—Å–∫–∏–π',
    ILMarkup.markup_line,
).add_captions(
    (
        ILB_GET_TO.callback,
        '*–ê—ç—Ä–æ–ø–æ—Ä—Ç –ü—É–ª–∫–æ–≤–æ:*\n'
        '–∞–≤—Ç–æ–±—É—Å 39 - —Å—Ç.–º. –ú–æ—Å–∫–æ–≤—Å–∫–∞—è - —Å—Ç.–º. –ü–ª. –í–æ—Å—Å—Ç–∞–Ω–∏—è '
        '- –ø–µ—à–∫–æ–º –¥–æ –ù–µ–≤—Å–∫–∏–π –ø—Ä. 128 (5 –º–∏–Ω—É—Ç).\n'
        '–∏–ª–∏ "–Ø–Ω–¥–µ–∫—Å —Ç–∞–∫—Å–∏" 650-850 —Ä—É–±.\n'
        '*–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –≤–æ–∫–∑–∞–ª:*\n'
        '–ü–µ—à–∫–æ–º 5 –º–∏–Ω—É—Ç –¥–æ –ù–µ–≤—Å–∫–æ–≥–æ –ø—Ä., 128.',
    ),
    (
        ILB_IN_YARD_PARKING.callback,
        '–ü–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—é.',
    ),
    (
        ILB_SHOPS.callback,
        '"–í–∫—É—Å–í–∏–ª–ª", –ù–µ–≤—Å–∫–∏–π –ø—Ä., 130.\n'
        '"–î–∏–∫—Å–∏", –ù–µ–≤—Å–∫–∏–π –ø—Ä., 126/2.',
    ),
    (
        ILB_EAT.callback,
        '–°—Ç–æ–ª–æ–≤–∞—è ‚Ññ1, –ù–µ–≤—Å–∫–∏–π –ø—Ä., 126, '
        '(–Ω–∞–ø—Ä–æ—Ç–∏–≤ –∂–µ–ª–µ–∑–Ω–æ–π –∫–∞—Ä–µ—Ç—ã).',
    ),
)
ILB_ALL = ILButton(
    'all'
).add_captions(
    (
        ILB_CHECK_IN_TIME.callback,
        '–ó–∞–µ–∑–¥ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ 14.00, –≤—ã–µ–∑–¥ –¥–æ 11.00.'
    ),
    (
        ILB_EARLY_LATE_CHECK.callback,
        '–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–Ω–Ω–µ–≥–æ –∑–∞–µ–∑–¥–∞ –∏–ª–∏ –ø–æ–∑–¥–Ω–µ–≥–æ –≤—ã–µ–∑–¥–∞ '
        '—Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 70% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–Ω—è.',
    ),
    (
        ILB_SETTLEMENT.callback,
        '–ó–∞—Å–µ–ª–µ–Ω–∏–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–µ, –º—ã –ø—Ä–∏—Å—ã–ª–∞–µ–º –≥–æ—Å—Ç—è–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é, '
        '–∫–ª—é—á–∏ –≤ —Å–µ–π—Ñ–µ —É –∫–≤–∞—Ä—Ç–∏—Ä—ã, –≤ —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ '
        '–∑–≤–æ–Ω–∏—Ç–µ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (906) 256-65-23.',
    ),
    (
        ILB_PAYMENT_BY_CARD.callback,
        '–û–ø–ª–∞—Ç–∞ –≤–æ–∑–º–æ–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–≤–æ–¥–æ–º –∏–ª–∏ –Ω–∞–ª–∏—á–Ω—ã–º–∏.',
    ),
    (
        ILB_PREPAYMENT.callback,
        '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 30% –æ—Ç –æ–±—â–µ–π '
        '—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.'
        '–¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã –º—ã –∑–∞–∫—Ä–µ–ø–ª—è–µ–º –í–∞—à—É –±—Ä–æ–Ω—å.',
    ),
    (
        ILB_PAYMENT_MADE.callback,
        '–û–ø–ª–∞—Ç–∞ –≤–Ω–æ—Å–∏—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–µ–∑–¥–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–º –∏–ª–∏ –Ω–∞–ª–∏—á–Ω—ã–º–∏.',
    ),
    (
        ILB_BOOKING_CANCEL.callback,
        '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –æ—Ç–º–µ–Ω–∞ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ 2-—Ö –Ω–µ–¥–µ–ª—å –¥–æ –¥–∞—Ç—ã –∑–∞–µ–∑–¥–∞.',
    ),
    (
        ILB_NEAREST_PARKING.callback,
        '–í—Å–µ –ø–∞—Ä–∫–æ–≤–∫–∏ –≤ —Ü–µ–Ω—Ç—Ä–µ –ø–ª–∞—Ç–Ω—ã–µ —Å 8 –¥–æ 20.',
    ),
    (
        ILB_TOWEL.callback,
        '–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å—Ç–µ–ª—å–Ω–æ–µ –±–µ–ª—å–µ –∏ –ø–æ 2 –ø–æ–ª–æ—Ç–µ–Ω—Ü–∞ –Ω–∞ –≥–æ—Å—Ç—è.',
    ),
    (
        ILB_WHAT_PROVIDE.callback,
        '–ù–µ—Ç üòô. –¢–æ–ª—å–∫–æ —Å—Ä–µ–¥—Å—Ç–≤–æ –¥/–º—ã—Ç—å—è –ø–æ—Å—É–¥—ã –∏ –∂–∏–¥–∫–æ–µ –º—ã–ª–æ.',
    ),
)

ILB_HOSTELS = ILButton(
    'hostels',
    '–û—Ç–µ–ª—å...',
    ILMarkup.markup_line,
    *(ILB_NEVSKY, ILB_PESTELYA,)
)

ILB_CATEGORIES = ILButton(
    'categories',
    'categories',
    None,
    *CHILDREN_CATEGORY,
)
ILB_START = ILButton(
    'start',
    '–ü—Ä–∏–≤–µ—Ç ‚úåÔ∏è\\.\n–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–µ–ª—å:',
    ILMarkup.markup_line,
    *(ILB_NEVSKY, ILB_PESTELYA),
    use_footer=False,
)

info_footer = {
    'default': ILMarkup.markup_line(
        ILB_CATEGORIES,
    ),

    ILB_CHECK_IN.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_CHECK_IN,)
    ),
    ILB_GET_TO.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_CHECK_IN,)
    ),
    ILB_CHECK_IN_TIME.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_CHECK_IN,)
    ),
    ILB_EARLY_LATE_CHECK.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_CHECK_IN,)
    ),
    ILB_SETTLEMENT.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_CHECK_IN,)
    ),

    ILB_PAYMENT.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_PAYMENT,)
    ),
    ILB_PAYMENT_MADE.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_PAYMENT,)
    ),
    ILB_PAYMENT_BY_CARD.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_PAYMENT,)
    ),
    ILB_PREPAYMENT.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_PAYMENT,)
    ),
    ILB_BOOKING_CANCEL.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_PAYMENT,)
    ),

    ILB_OTHER.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_OTHER,)
    ),
    ILB_NEAREST_PARKING.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_OTHER,)
    ),
    ILB_IN_YARD_PARKING.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_OTHER,)
    ),
    ILB_TOWEL.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_OTHER,)
    ),
    ILB_WHAT_PROVIDE.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_OTHER,)
    ),
    ILB_SHOPS.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_OTHER,)
    ),
    ILB_EAT.callback: ILMarkup.markup_line(
        ILB_CATEGORIES, (ILB_OTHER,)
    ),
}


class State():

    def __init__(self):
        self._hostel: Optional[ILButton] = None
        self._category: Optional[ILButton] = None
        self._item: Optional[ILButton] = None

    @classmethod
    def _delete_messages(cls, message, context: CallbackContext) -> None:
        message_id = message.message_id
        try:
            while True:
                context.bot.delete_message(message.chat_id, message_id)
                message_id -= 1
        except:
            pass

    @property
    def hostel(self) -> Optional[ILButton]:
        return self._hostel
    @hostel.setter
    def hostel(self, selection: Optional[ILButton]):
        self._hostel = selection

    @property
    def category(self) -> Optional[ILButton]:
        return self._category
    @category.setter
    def category(self, selection: Optional[ILButton]):
        self._category = selection

    @property
    def item(self) -> Optional[ILButton]:
        return self._item
    @item.setter
    def item(self, selection: Optional[ILButton]):
        self._item = selection

    def clear(self) -> None:
        self.hostel = self.category = self.item = None

    def get_message(self) -> str:
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—ã–≤–æ–¥–∞."""
        def _format_by_markdown(text: str) -> str:
            """–§–æ–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ñ–æ—Ä–º–∞—Ç–æ–º MARKDOWN."""
            CHARS = '_*[]()~`>#+-=|{}.!'
            for ch in CHARS:
                text = text.replace(ch, f'\\{ch}')
            return text

        def _get_caption(format_str: str, il_button: Optional[ILButton]) -> str:
            """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É."""
            return format_str.format(
                _format_by_markdown(il_button.caption())
            ) if il_button else ''

        def _get_message_text() -> str:
            """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ,
            —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–µ–µ —Ç–µ–∫—É—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é.
            """
            return _format_by_markdown('\n'.join((
                ILB_ALL.caption(self.item),
                self.hostel.caption(self.item) if self.hostel else '',
            ))).strip() if self.item else ''

        text = ('\n').join((
            _get_caption('*–í—ã–±—Ä–∞–Ω –æ—Ç–µ–ª—å "{}"*', self.hostel),
            _get_caption('*{}*', self.category),
            _get_caption('__*{}*__', self.item),
            _get_message_text(),
        )).strip()
        return '\n'.join((
                '–ü—Ä–∏–≤–µ—Ç ‚úåÔ∏è',
                '–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–µ–ª—å:',
            )) if not text else text

    def _set_items(self, query:CallbackQuery) -> None:
        callback = query.data if query else ''
        callback_button = ILButton.button_by_callback(callback)
        if callback_button in ILB_HOSTELS.children.buttons:
            self.hostel = callback_button
            self.category = self.item = None
        elif callback_button in ILB_CATEGORIES.children.buttons:
            self.category = callback_button
            self.item = None
        else:
            self.item = callback_button

    @log_errors
    def start_handler(self, update: Update, context: CallbackContext):
        message = update.message
        self._delete_messages(message, context)
        self.clear()

        text = self.get_message()
        markup = ILMarkup()('start')
        message.reply_text(
            text=text,
            parse_mode=ParseMode.MARKDOWN_V2,
            reply_markup=markup,
        )

    @log_errors
    def keyboard_callback_handler(self, update: Update, context: CallbackContext):
        query = update.callback_query

        self._set_items(query)
        m = ILMarkup()(callback=query.data, footer=info_footer)
        query.edit_message_text(
            text=self.get_message(),
            parse_mode='MarkdownV2',
            reply_markup=m

            # reply_markup=ILMarkup()(callback=query.data, footer=info_footer),
        )
