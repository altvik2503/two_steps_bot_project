from typing import List, Any, Iterable
from telegram import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
)

# Buttons
CBB_ALL = 'all'
CBB_PESTELYA = 'pestelya'
CBB_NEVSKY = 'nevsky'

CBB_CHECK_IN_TIME = 'check_in_time'
CBB_EARLY_LATE_CHECK = 'early_check'
CBB_IN_YARD_PARKING = 'in_yard_parking'
CBB_NEAREST_PARKING = 'nearest_parking'
CBB_SETTLEMENT = 'settlement'
CBB_PAYMENT_BY_CARD = 'payment_by_card'
CBB_PREPAYMENT = 'prepayment'
CBB_PAYMENT_MADE = 'payment_made'
CBB_BOOKING_CANCEL = 'booking_cancel'
CBB_SHOPS = 'shops'
CBB_TOWEL = 'towel'
CBB_GET_TO = 'get_to'
CBB_EAT = 'eat'
CBB_WHAT_PROVIDE = 'what_provide'

CBB_CHECK_IN = 'check_in'
CBB_PAYMENT = 'payment'
CBB_OTHER = 'other'
CBB_HOSTELS = 'hostels'

CBB_CAPTIONS = {
    CBB_PESTELYA: '–ü–µ—Å—Ç–µ–ª—è',
    CBB_NEVSKY: '–ù–µ–≤—Å–∫–∏–π',

    CBB_CHECK_IN_TIME: '–í—Ä–µ–º—è –∑–∞–µ–∑–¥–∞/ –≤—ã–µ–∑–¥–∞.',
    CBB_EARLY_LATE_CHECK: '–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–Ω–Ω–µ–≥–æ –∑–∞–µ–∑–¥–∞/–ø–æ–∑–¥–Ω–µ–≥–æ –≤—ã–µ–∑–¥–∞.',
    CBB_IN_YARD_PARKING: '–ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–∏–ø–∞—Ä–∫–æ–≤–∞—Ç—å –º–∞—à–∏–Ω—É –≤–æ –¥–≤–æ—Ä–µ?',
    CBB_NEAREST_PARKING: '–ï—Å—Ç—å –ª–∏ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏ –ø–∞—Ä–∫–æ–≤–∫–∏?',
    CBB_SETTLEMENT: '–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞—Å–µ–ª–µ–Ω–∏—è?',
    CBB_PAYMENT_BY_CARD: '–í–æ–∑–º–æ–∂–Ω–∞ –ª–∏ –æ–ø–ª–∞—Ç–∞ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ–π?',
    CBB_PREPAYMENT: '–ë—Ä–æ–Ω—å –Ω–∞–ø—Ä—è–º—É—é. –ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞.',
    CBB_PAYMENT_MADE: '–ö–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—Ç–∞?',
    CBB_BOOKING_CANCEL: '–ï—Å–ª–∏ —è –∑–∞—Ö–æ—á—É –æ—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...',
    CBB_SHOPS: '–ï—Å—Ç—å –ª–∏ —Ä—è–¥–æ–º –º–∞–≥–∞–∑–∏–Ω—ã?',
    CBB_TOWEL: '–ë–µ–ª—å–µ –∏ –ø–æ–ª–æ—Ç–µ–Ω—Ü–∞.',
    CBB_GET_TO: '–ö–∞–∫ –¥–æ–µ—Ö–∞—Ç—å?',
    CBB_EAT: '–ì–¥–µ –ø–µ—Ä–µ–∫—É—Å–∏—Ç—å –±—ã—Å—Ç—Ä–æ/–Ω–µ –¥–æ—Ä–æ–≥–æ?',
    CBB_WHAT_PROVIDE:
        '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –ª–∏ —Ç–∞–ø–æ—á–∫–∏, —à–∞–ø–æ—á–∫–∏ –¥–ª—è –¥—É—à–∞, '
        '–∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞?',

    CBB_CHECK_IN: '–ó–∞–µ–∑–¥...',
    CBB_PAYMENT: '–û–ø–ª–∞—Ç–∞...',
    CBB_OTHER: '–î—Ä—É–≥–æ–µ...',
    CBB_HOSTELS: '–û—Ç–µ–ª—å...',
}

HOSTELS = (
    CBB_NEVSKY,
    CBB_PESTELYA,
)

MESSAGES = {
    CBB_GET_TO: {
        CBB_PESTELYA:
            '*–ê—ç—Ä–æ–ø–æ—Ä—Ç –ü—É–ª–∫–æ–≤–æ:*\n'
            '–∞–≤—Ç–æ–±—É—Å 39 - —Å—Ç.–º. –ú–æ—Å–∫–æ–≤—Å–∫–∞—è - —Å—Ç.–º. –ì–æ—Å—Ç–∏–Ω—ã–π –¥–≤–æ—Ä '
            '- –ø–µ—à–∫–æ–º –¥–æ —É–ª. –ü–µ—Å—Ç–µ–ª—è 5,\n'
            '–∏–ª–∏ "–Ø–Ω–¥–µ–∫—Å —Ç–∞–∫—Å–∏" 650-850 —Ä—É–±.\n'
            '*–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –≤–æ–∫–∑–∞–ª:*\n'
            '–æ–±—â. —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –ø–æ –ù–µ–≤—Å–∫–æ–º—É –ø—Ä., –¥–æ —Å—Ç. –ì–æ—Å—Ç–∏–Ω—ã–π –¥–≤–æ—Ä. '
            '–î–∞–ª–µ–µ –ø–µ—à–∫–æ–º 15 –º–∏–Ω—É—Ç,\n'
            '–∏–ª–∏ "–Ø–Ω–¥–µ–∫—Å —Ç–∞–∫—Å–∏" 180-280 —Ä—É–±.',
        CBB_NEVSKY:
            '*–ê—ç—Ä–æ–ø–æ—Ä—Ç –ü—É–ª–∫–æ–≤–æ:*\n'
            '–∞–≤—Ç–æ–±—É—Å 39 - —Å—Ç.–º. –ú–æ—Å–∫–æ–≤—Å–∫–∞—è - —Å—Ç.–º. –ü–ª. –í–æ—Å—Å—Ç–∞–Ω–∏—è '
            '- –ø–µ—à–∫–æ–º –¥–æ –ù–µ–≤—Å–∫–∏–π –ø—Ä. 128 (5 –º–∏–Ω—É—Ç).\n'
            '–∏–ª–∏ "–Ø–Ω–¥–µ–∫—Å —Ç–∞–∫—Å–∏" 650-850 —Ä—É–±.\n'
            '*–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –≤–æ–∫–∑–∞–ª:*\n'
            '–ü–µ—à–∫–æ–º 5 –º–∏–Ω—É—Ç –¥–æ –ù–µ–≤—Å–∫–æ–≥–æ –ø—Ä., 128.',
    },
    CBB_CHECK_IN_TIME: {
        CBB_ALL: '–ó–∞–µ–∑–¥ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ 14.00, –≤—ã–µ–∑–¥ –¥–æ 11.00.',
    },
    CBB_EARLY_LATE_CHECK: {
        CBB_ALL:
            '–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–Ω–Ω–µ–≥–æ –∑–∞–µ–∑–¥–∞ –∏–ª–∏ –ø–æ–∑–¥–Ω–µ–≥–æ –≤—ã–µ–∑–¥–∞ '
            '—Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 70% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–Ω—è.',
    },
    CBB_SETTLEMENT: {
        CBB_ALL:
            '–ó–∞—Å–µ–ª–µ–Ω–∏–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–µ, –º—ã –ø—Ä–∏—Å—ã–ª–∞–µ–º –≥–æ—Å—Ç—è–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é, '
            '–∫–ª—é—á–∏ –≤ —Å–µ–π—Ñ–µ —É –∫–≤–∞—Ä—Ç–∏—Ä—ã, –≤ —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ '
            '–∑–≤–æ–Ω–∏—Ç–µ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (906) 256-65-23.',
    },
    CBB_PAYMENT_BY_CARD: {
        CBB_ALL: '–û–ø–ª–∞—Ç–∞ –≤–æ–∑–º–æ–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–≤–æ–¥–æ–º –∏–ª–∏ –Ω–∞–ª–∏—á–Ω—ã–º–∏.',
    },
    CBB_PREPAYMENT: {
        CBB_ALL:
            '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 30% –æ—Ç –æ–±—â–µ–π '
            '—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.'
            '–¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã –º—ã –∑–∞–∫—Ä–µ–ø–ª—è–µ–º –í–∞—à—É –±—Ä–æ–Ω—å.',
    },
    CBB_PAYMENT_MADE: {
        CBB_ALL: '–û–ø–ª–∞—Ç–∞ –≤–Ω–æ—Å–∏—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–µ–∑–¥–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–º –∏–ª–∏ –Ω–∞–ª–∏—á–Ω—ã–º–∏.',
    },
    CBB_BOOKING_CANCEL: {
        CBB_ALL: '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –æ—Ç–º–µ–Ω–∞ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ 2-—Ö –Ω–µ–¥–µ–ª—å –¥–æ –¥–∞—Ç—ã –∑–∞–µ–∑–¥–∞.',
    },
    CBB_NEAREST_PARKING: {
        CBB_ALL: '–í—Å–µ –ø–∞—Ä–∫–æ–≤–∫–∏ –≤ —Ü–µ–Ω—Ç—Ä–µ –ø–ª–∞—Ç–Ω—ã–µ —Å 8 –¥–æ 20.',
        CBB_PESTELYA: '–û—Ç–∫—Ä—ã—Ç—ã–π –¥–≤–æ—Ä - —É–ª. –ß–∞–π–∫–æ–≤—Å–∫–æ–≥–æ, 2.',
    },
    CBB_IN_YARD_PARKING: {
        CBB_NEVSKY: '–ù–µ—Ç, –∑–∞–µ–∑–¥–∞ –≤–æ –¥–≤–æ—Ä, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ—Ç.',
        CBB_PESTELYA: '–ü–æ –∑–∞–ø—Ä–æ—Å—É.',
    },
    CBB_SHOPS: {
        CBB_PESTELYA:
            '"–î–∏–∫—Å–∏", —É–ª. –ü–µ—Å—Ç–µ–ª—è, 12.\n'
            '"–§–µ—Ä–º–µ—Ä", —É–ª. –ü–µ—Å—Ç–µ–ª—è, 13.\n'
            '"–ê–∑–±—É–∫–∞ –≤–∫—É—Å–∞", –õ–∏—Ç–µ–π–Ω—ã–π –ø—Ä., 26.',
        CBB_NEVSKY:
            '"–í–∫—É—Å–í–∏–ª–ª", –ù–µ–≤—Å–∫–∏–π –ø—Ä., 130.\n'
            '"–î–∏–∫—Å–∏", –ù–µ–≤—Å–∫–∏–π –ø—Ä., 126/2.',
    },
    CBB_EAT: {
        CBB_PESTELYA: '–°—Ç–æ–ª–æ–≤–∞—è "–¢–∞—Ä–µ–ª–∫–∞", —É–ª. –ü–µ—Å—Ç–µ–ª—è, 8.',
        CBB_NEVSKY:
            '–°—Ç–æ–ª–æ–≤–∞—è ‚Ññ1, –ù–µ–≤—Å–∫–∏–π –ø—Ä., 126, '
            '(–Ω–∞–ø—Ä–æ—Ç–∏–≤ –∂–µ–ª–µ–∑–Ω–æ–π –∫–∞—Ä–µ—Ç—ã).',
    },
    CBB_TOWEL: {
        CBB_ALL:
            '–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å—Ç–µ–ª—å–Ω–æ–µ –±–µ–ª—å–µ –∏ –ø–æ 2 –ø–æ–ª–æ—Ç–µ–Ω—Ü–∞ –Ω–∞ –≥–æ—Å—Ç—è.',
    },
    CBB_WHAT_PROVIDE: {
        CBB_ALL: '–ù–µ—Ç üòô. –¢–æ–ª—å–∫–æ —Å—Ä–µ–¥—Å—Ç–≤–æ –¥/–º—ã—Ç—å—è –ø–æ—Å—É–¥—ã –∏ –∂–∏–¥–∫–æ–µ –º—ã–ª–æ.',
    },
}

# Questions groups
CATEGORIES = {
    CBB_CHECK_IN: (
        CBB_GET_TO,
        CBB_CHECK_IN_TIME,
        CBB_EARLY_LATE_CHECK,
        CBB_SETTLEMENT,
    ),
    CBB_PAYMENT: (
        CBB_PAYMENT_MADE,
        CBB_PAYMENT_BY_CARD,
        CBB_PREPAYMENT,
        CBB_BOOKING_CANCEL,
    ),
    CBB_OTHER: (
        CBB_NEAREST_PARKING,
        CBB_IN_YARD_PARKING,
        CBB_TOWEL,
        CBB_WHAT_PROVIDE,
        CBB_SHOPS,
        CBB_EAT,
    ),
    CBB_HOSTELS: (
        CBB_NEVSKY,
        CBB_PESTELYA,
    )
}


class ILButton(InlineKeyboardButton):
    """–ö–ª–∞—Å—Å –∫–Ω–æ–ø–∫–∏, –∏–Ω–∏—Ü–∏–∏—Ä—É–µ–º–æ–π —Ç–µ–∫—Å—Ç–æ–º."""
    def __init__(self, cbb: str, **_kwargs: Any):
        super().__init__(text=CBB_CAPTIONS[cbb], callback_data=cbb, **_kwargs)


def _get_il_kbd_v(items: List[str]) -> List[ILButton]:
    btns = [[ILButton(item)] for item in items]
    return btns


def _get_il_kbd_h(items: List[str]) -> List[ILButton]:
    return [[ILButton(item) for item in items]]


def _get_il_kbd_vh(items_v: List[str], items_h: List[str]):
    kbd = _get_il_kbd_v(items_v)
    kbd.extend(_get_il_kbd_h(items_h))
    return kbd


def _get_item(query, items: Iterable) -> str:
    """–ò—â–µ—Ç nik –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é.
    –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç —á—Ç–æ, data - —ç—Ç–æ nik –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é,
    –∏–ª–∏ nik –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ msg_text.
    """
    if query:
        data = query.data
        msg_text = query.message.text
        if data in items:
            return data
        for item in items:
            if CBB_CAPTIONS[item] in msg_text:
                return item
    return ''


def _format_by_markdown(text: str) -> str:
    """–§–æ–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ñ–æ—Ä–º–∞—Ç–æ–º MARKDOWN."""
    CHARS = '_*[]()~`>#+-=|{}.!'
    for ch in CHARS:
        text = text.replace(ch, f'\{ch}')
    return text


def _get_caption(base_str: str, key: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É."""
    return base_str.format(
        _format_by_markdown(CBB_CAPTIONS[key])
    ) if key else ''

def _get_message(hostel: str, data: str) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ,
    —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–µ–µ –∫–ª—é—á—É data.
    """
    for key, value in MESSAGES.items():
        if key == data:
            text = ('\n').join((
                value.get(CBB_ALL, ''),
                value.get(hostel, '')
            )).strip()
            return _format_by_markdown(text)
    return ''


def get_markup(hostel: str = '', category: str = '') -> InlineKeyboardMarkup:
    if not hostel:
        kbd = _get_il_kbd_v(HOSTELS)
    elif not category:
        kbd = _get_il_kbd_h(CATEGORIES.keys())
    else:
        kbd = _get_il_kbd_vh(CATEGORIES.get(category), CATEGORIES.keys())
    return InlineKeyboardMarkup(kbd)


def get_message(query = None) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—ã–≤–æ–¥–∞."""
    hostel = _get_item(query, HOSTELS)
    category = _get_item(query, CATEGORIES.keys())
    if category == CBB_HOSTELS:
        hostel = category = item = ''
    if query and query.data in CATEGORIES.keys():
        item = ''
    else:
        item = _get_item(query, MESSAGES.keys())

    text = _get_message(hostel, item)
    text = ('\n').join((
        _get_caption('*–í—ã–±—Ä–∞–Ω –æ—Ç–µ–ª—å "{}"*', hostel),
        _get_caption('*{}*', category),
        _get_caption('__*{}*__', item),
        text,
    )).strip()
    if not text:
        text = '–ü—Ä–∏–≤–µ—Ç ‚úåÔ∏è\.\n–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–µ–ª—å:'
    return (text, get_markup(hostel, category))
